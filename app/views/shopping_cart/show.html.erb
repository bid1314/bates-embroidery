<div class="shopping-cart-container">
  <div class="cart-header">
    <h2>Shopping Cart</h2>
    <span class="cart-count"><%= @order.item_count %> items</span>
  </div>

  <% if @line_items.any? %>
    <div class="cart-items">
      <% @line_items.each do |line_item| %>
        <div class="cart-item" data-line-item-id="<%= line_item.id %>">
          <div class="item-image">
            <% if line_item.variant.images.any? %>
              <%= image_tag line_item.variant.images.first.url(:small), alt: line_item.variant.name %>
            <% else %>
              <div class="no-image">No Image</div>
            <% end %>
          </div>
          
          <div class="item-details">
            <h4><%= line_item.variant.product.name %></h4>
            <p class="variant-info">
              <% if line_item.variant.option_values.any? %>
                <%= line_item.variant.option_values.map(&:presentation).join(', ') %>
              <% end %>
            </p>
            
            <% if line_item.private_metadata&.dig('customization_data') %>
              <div class="customization-info">
                <strong>Customizations:</strong>
                <ul>
                  <% JSON.parse(line_item.private_metadata['customization_data']).each do |key, value| %>
                    <li><%= key.humanize %>: <%= value %></li>
                  <% end %>
                </ul>
              </div>
            <% end %>
          </div>
          
          <div class="item-quantity">
            <label>Quantity:</label>
            <input type="number" 
                   class="quantity-input" 
                   value="<%= line_item.quantity %>" 
                   min="1" 
                   data-line-item-id="<%= line_item.id %>">
          </div>
          
          <div class="item-price">
            <span class="unit-price"><%= line_item.display_price %></span>
            <span class="total-price"><%= line_item.display_total %></span>
          </div>
          
          <div class="item-actions">
            <button class="remove-item btn btn-danger" data-line-item-id="<%= line_item.id %>">
              Remove
            </button>
          </div>
        </div>
      <% end %>
    </div>

    <div class="cart-summary">
      <div class="summary-row">
        <span>Subtotal:</span>
        <span class="cart-subtotal"><%= @order.display_item_total %></span>
      </div>
      
      <% if @order.adjustments.any? %>
        <% @order.adjustments.each do |adjustment| %>
          <div class="summary-row">
            <span><%= adjustment.label %>:</span>
            <span><%= adjustment.display_amount %></span>
          </div>
        <% end %>
      <% end %>
      
      <div class="summary-row total">
        <span><strong>Total:</strong></span>
        <span class="cart-total"><strong><%= @order.display_total %></strong></span>
      </div>
      
      <div class="cart-actions">
        <button class="clear-cart btn btn-secondary">Clear Cart</button>
        <%= link_to "Continue Shopping", root_path, class: "btn btn-outline-primary" %>
        <%= link_to "Checkout", spree.checkout_path, class: "btn btn-primary" %>
      </div>
    </div>
  <% else %>
    <div class="empty-cart">
      <h3>Your cart is empty</h3>
      <p>Add some products to get started!</p>
      <%= link_to "Browse Products", root_path, class: "btn btn-primary" %>
    </div>
  <% end %>
</div>

<style>
.shopping-cart-container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 20px;
}

.cart-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 30px;
  border-bottom: 2px solid #eee;
  padding-bottom: 15px;
}

.cart-count {
  background: #007bff;
  color: white;
  padding: 5px 15px;
  border-radius: 20px;
  font-size: 14px;
}

.cart-item {
  display: grid;
  grid-template-columns: 100px 1fr 120px 120px 100px;
  gap: 20px;
  align-items: center;
  padding: 20px;
  border: 1px solid #eee;
  border-radius: 8px;
  margin-bottom: 15px;
}

.item-image img, .no-image {
  width: 80px;
  height: 80px;
  object-fit: cover;
  border-radius: 4px;
}

.no-image {
  background: #f8f9fa;
  display: flex;
  align-items: center;
  justify-content: center;
  color: #6c757d;
  font-size: 12px;
}

.item-details h4 {
  margin: 0 0 5px 0;
  font-size: 16px;
}

.variant-info {
  color: #6c757d;
  font-size: 14px;
  margin: 0;
}

.customization-info {
  margin-top: 10px;
  font-size: 12px;
}

.customization-info ul {
  margin: 5px 0 0 0;
  padding-left: 15px;
}

.quantity-input {
  width: 60px;
  padding: 5px;
  border: 1px solid #ddd;
  border-radius: 4px;
  text-align: center;
}

.item-price {
  text-align: right;
}

.unit-price {
  display: block;
  color: #6c757d;
  font-size: 14px;
}

.total-price {
  display: block;
  font-weight: bold;
  font-size: 16px;
}

.cart-summary {
  background: #f8f9fa;
  padding: 20px;
  border-radius: 8px;
  margin-top: 30px;
}

.summary-row {
  display: flex;
  justify-content: space-between;
  margin-bottom: 10px;
}

.summary-row.total {
  border-top: 2px solid #dee2e6;
  padding-top: 15px;
  margin-top: 15px;
  font-size: 18px;
}

.cart-actions {
  display: flex;
  gap: 10px;
  margin-top: 20px;
}

.empty-cart {
  text-align: center;
  padding: 60px 20px;
}

.btn {
  padding: 10px 20px;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  text-decoration: none;
  display: inline-block;
  font-size: 14px;
}

.btn-primary {
  background: #007bff;
  color: white;
}

.btn-secondary {
  background: #6c757d;
  color: white;
}

.btn-danger {
  background: #dc3545;
  color: white;
}

.btn-outline-primary {
  background: transparent;
  color: #007bff;
  border: 1px solid #007bff;
}

@media (max-width: 768px) {
  .cart-item {
    grid-template-columns: 1fr;
    text-align: center;
  }
  
  .cart-actions {
    flex-direction: column;
  }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Quantity update functionality
  document.querySelectorAll('.quantity-input').forEach(input => {
    input.addEventListener('change', function() {
      const lineItemId = this.dataset.lineItemId;
      const quantity = parseInt(this.value);
      
      updateQuantity(lineItemId, quantity);
    });
  });
  
  // Remove item functionality
  document.querySelectorAll('.remove-item').forEach(button => {
    button.addEventListener('click', function() {
      const lineItemId = this.dataset.lineItemId;
      removeItem(lineItemId);
    });
  });
  
  // Clear cart functionality
  document.querySelector('.clear-cart')?.addEventListener('click', function() {
    if (confirm('Are you sure you want to clear your cart?')) {
      clearCart();
    }
  });
});

function updateQuantity(lineItemId, quantity) {
  fetch('/shopping_cart/update_quantity', {
    method: 'PATCH',
    headers: {
      'Content-Type': 'application/json',
      'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content
    },
    body: JSON.stringify({
      line_item_id: lineItemId,
      quantity: quantity
    })
  })
  .then(response => response.json())
  .then(data => {
    if (data.success) {
      location.reload();
    } else {
      alert(data.message);
    }
  });
}

function removeItem(lineItemId) {
  fetch('/shopping_cart/remove_item', {
    method: 'DELETE',
    headers: {
      'Content-Type': 'application/json',
      'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content
    },
    body: JSON.stringify({
      line_item_id: lineItemId
    })
  })
  .then(response => response.json())
  .then(data => {
    if (data.success) {
      location.reload();
    } else {
      alert(data.message);
    }
  });
}

function clearCart() {
  fetch('/shopping_cart/clear', {
    method: 'DELETE',
    headers: {
      'Content-Type': 'application/json',
      'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content
    }
  })
  .then(response => response.json())
  .then(data => {
    if (data.success) {
      location.reload();
    } else {
      alert(data.message);
    }
  });
}
</script>